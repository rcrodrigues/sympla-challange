app-page-header(pageName="Criar Eventos")
.page-container
	form('(ngSubmit)'="onSubmit()", #symplaEvent="ngForm")
		.card

			.title 1. Nome do Evento
			.content
				.col
					.input-container
						label.required(for="name") Nome do evento
						.input-group
							.input-group-content
								input#name(name="name", #name="ngModel", type="text",'[(ngModel)]'="event.name", required)
						.error(*ngIf="name.invalid && (name.dirty || name.touched)") Campo obrigatório
			.title 2. Quando?
			.content
				.row.wrap
					.row.wrap
						.input-container
							label.required(for="startDate") Data de Início
							.input-group
								.input-group-icon
									img(src="../assets/calendar.png")
								.input-group-content
									input#startDate(name="startDate", #startDate="ngModel", type="date",'[(ngModel)]'="event.startDate",  required)
							.error(*ngIf="startDate.invalid && (startDate.dirty || startDate.touched)") Campo obrigatório

						.input-container
							label.required(for="startTime") Hora de Início
							.input-group
								.input-group-icon
									img(src="../assets/time.png")
								.input-group-content
									input#startTime(name="startTime", #startTime="ngModel", type="time",'[(ngModel)]'="event.startTime",  required)
							.error(*ngIf="startTime.invalid && (startTime.dirty || startTime.touched)") Campo obrigatório

					.row.wrap
						.input-container
							label.required(for="endDate") Data de término
							.input-group
								.input-group-icon
									img(src="../assets/calendar.png")
								.input-group-content
									input#endDate(name="endDate", #endDate="ngModel", type="date",'[(ngModel)]'="event.endDate",  required)
							.error(*ngIf="endDate.invalid && (endDate.dirty || endDate.touched)") Campo obrigatório

						.input-container
							label.required(for="endTime") Hora de término
							.input-group
								.input-group-icon
									img(src="../assets/time.png")
								.input-group-content
									input#endTime(name="endTime", #endTime="ngModel", type="time",'[(ngModel)]'="event.endTime",  required)
							.error(*ngIf="endTime.invalid && (endTime.dirty || endTime.touched)") Campo obrigatório

			.title 3. Ingresso
			.content
				.row.wrap
					.col.grow
						.input-container
							label.required(for="ticketName") Nome do Ingresso
							.input-group
								.input-group-content
									input#ticketName(name="ticketName", #ticketName="ngModel", type="text",'[(ngModel)]'="event.ticket.name",  required)
							.error(*ngIf="ticketName.invalid && (ticketName.dirty || ticketName.touched)") Campo obrigatório
					.col.grow
						.input-container
							label.required(for="ticketQuantity") Quantidade de Ingressos
							.input-group
								.input-group-content
									input#ticketQuantity(name="ticketQuantity", #ticketQuantity="ngModel", type="number",'[(ngModel)]'="event.ticket.quantity",  required)
							.error(*ngIf="ticketQuantity.invalid && (ticketQuantity.dirty || ticketQuantity.touched)") Campo obrigatório
					.col.grow
						.input-container
							label.required(for="ticketPrice") Preço do Ingresso
							.input-group
								.input-group-content
									input#ticketPrice(name="ticketPrice",  #ticketPrice="ngModel", type="number",'[(ngModel)]'="event.ticket.price",  required)
							.error(*ngIf="ticketPrice.invalid && (ticketPrice.dirty || ticketPrice.touched)") Campo obrigatório
					.col.grow
						.row
							input#free(name="free", type="checkbox",'[(ngModel)]'="event.ticket.free")
							label(for="free") Grátis

		button.warning(type="submit",[disabled]="!symplaEvent.form.valid", style="float:right") publicar evento
